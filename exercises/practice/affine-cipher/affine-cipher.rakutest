#!/usr/bin/env raku
use Test;
use lib $?FILE.IO.dirname;
use AffineCipher;

for <encode decode> -> $method {
  AffineCipher.^can($method) or bail-out "Cannot run expected method `$method`.";
}

is(
    AffineCipher.new( :a(5), :b(7) ).encode("yes"),
    "xbt",
    "encode: encode yes",
);

is(
    AffineCipher.new( :a(15), :b(18) ).encode("no"),
    "fu",
    "encode: encode no",
);

is(
    AffineCipher.new( :a(21), :b(3) ).encode("OMG"),
    "lvz",
    "encode: encode OMG",
);

is(
    AffineCipher.new( :a(25), :b(47) ).encode("O M G"),
    "hjp",
    "encode: encode O M G",
);

is(
    AffineCipher.new( :a(11), :b(15) ).encode("mindblowingly"),
    "rzcwa gnxzc dgt",
    "encode: encode mindblowingly",
);

is(
    AffineCipher.new( :a(3), :b(4) ).encode("Testing,1 2 3, testing."),
    "jqgjc rw123 jqgjc rw",
    "encode: encode numbers",
);

is(
    AffineCipher.new( :a(5), :b(17) ).encode("Truth is fiction."),
    "iynia fdqfb ifje",
    "encode: encode deep thought",
);

is(
    AffineCipher.new( :a(17), :b(33) ).encode("The quick brown fox jumps over the lazy dog."),
    "swxtj npvyk lruol iejdc blaxk swxmh qzglf",
    "encode: encode all the letters",
);

dies-ok { AffineCipher.new( :a(6), :b(17) ) }, "encode: encode with a not coprime to m";

is(
    AffineCipher.new( :a(3), :b(7) ).decode("tytgn fjr"),
    "exercism",
    "decode: decode exercism",
);

is(
    AffineCipher.new( :a(19), :b(16) ).decode("qdwju nqcro muwhn odqun oppmd aunwd o"),
    "anobstacleisoftenasteppingstone",
    "decode: decode a sentence",
);

is(
    AffineCipher.new( :a(25), :b(7) ).decode("odpoz ub123 odpoz ub"),
    "testing123testing",
    "decode: decode numbers",
);

is(
    AffineCipher.new( :a(17), :b(33) ).decode("swxtj npvyk lruol iejdc blaxk swxmh qzglf"),
    "thequickbrownfoxjumpsoverthelazydog",
    "decode: decode all the letters",
);

is(
    AffineCipher.new( :a(17), :b(33) ).decode("swxtjnpvyklruoliejdcblaxkswxmhqzglf"),
    "thequickbrownfoxjumpsoverthelazydog",
    "decode: decode with no spaces in input",
);

is(
    AffineCipher.new( :a(15), :b(16) ).decode("vszzm    cly   yd cg    qdp"),
    "jollygreengiant",
    "decode: decode with too many spaces",
);

dies-ok { AffineCipher.new( :a(13), :b(5) ) }, "decode: decode with a not coprime to m";

done-testing;

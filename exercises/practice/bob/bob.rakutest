#!/usr/bin/env raku
use Test;
use lib $?FILE.IO.dirname; #`[Look for the module inside the same directory as this test file.]
use Bob;

#`[Check that the class 'Bob' can use all of the methods
needed in the tests (only 'hey' for this one).]
for <hey> -> $method {
  Bob.^can($method) or bail-out "Cannot run expected method `$method`.";
}

cmp-ok(
    Bob.hey("Tom-ay-to, tom-aaaah-to."),
    "eq",
    "Whatever.",
    "stating something",
);

cmp-ok(
    Bob.hey("WATCH OUT!"),
    "eq",
    "Whoa, chill out!",
    "shouting",
);

cmp-ok(
    Bob.hey("FCECDFCAAB"),
    "eq",
    "Whoa, chill out!",
    "shouting gibberish",
);

cmp-ok(
    Bob.hey("Does this cryogenic chamber make me look fat?"),
    "eq",
    "Sure.",
    "asking a question",
);

cmp-ok(
    Bob.hey("You are, what, like 15?"),
    "eq",
    "Sure.",
    "asking a numeric question",
);

cmp-ok(
    Bob.hey("fffbbcbeab?"),
    "eq",
    "Sure.",
    "asking gibberish",
);

cmp-ok(
    Bob.hey("Hi there!"),
    "eq",
    "Whatever.",
    "talking forcefully",
);

cmp-ok(
    Bob.hey("It's OK if you don't want to go work for NASA."),
    "eq",
    "Whatever.",
    "using acronyms in regular speech",
);

cmp-ok(
    Bob.hey("WHAT'S GOING ON?"),
    "eq",
    "Calm down, I know what I'm doing!",
    "forceful question",
);

cmp-ok(
    Bob.hey("1, 2, 3 GO!"),
    "eq",
    "Whoa, chill out!",
    "shouting numbers",
);

cmp-ok(
    Bob.hey("1, 2, 3"),
    "eq",
    "Whatever.",
    "no letters",
);

cmp-ok(
    Bob.hey("4?"),
    "eq",
    "Sure.",
    "question with no letters",
);

cmp-ok(
    Bob.hey("ZOMG THE \%^*\@#\$(*^ ZOMBIES ARE COMING!!11!!1!"),
    "eq",
    "Whoa, chill out!",
    "shouting with special characters",
);

cmp-ok(
    Bob.hey("I HATE THE DENTIST"),
    "eq",
    "Whoa, chill out!",
    "shouting with no exclamation mark",
);

cmp-ok(
    Bob.hey("Ending with ? means a question."),
    "eq",
    "Whatever.",
    "statement containing question mark",
);

cmp-ok(
    Bob.hey(":) ?"),
    "eq",
    "Sure.",
    "non-letters with question",
);

cmp-ok(
    Bob.hey("Wait! Hang on. Are you going to be OK?"),
    "eq",
    "Sure.",
    "prattling on",
);

cmp-ok(
    Bob.hey(""),
    "eq",
    "Fine. Be that way!",
    "silence",
);

cmp-ok(
    Bob.hey("          "),
    "eq",
    "Fine. Be that way!",
    "prolonged silence",
);

cmp-ok(
    Bob.hey("\t\t\t\t\t\t\t\t\t\t"),
    "eq",
    "Fine. Be that way!",
    "alternate silence",
);

cmp-ok(
    Bob.hey("\nDoes this cryogenic chamber make me look fat?\nNo."),
    "eq",
    "Whatever.",
    "multiple line question",
);

cmp-ok(
    Bob.hey("         hmmmmmmm..."),
    "eq",
    "Whatever.",
    "starting with whitespace",
);

cmp-ok(
    Bob.hey("Okay if like my  spacebar  quite a bit?   "),
    "eq",
    "Sure.",
    "ending with whitespace",
);

cmp-ok(
    Bob.hey("\n\r \t"),
    "eq",
    "Fine. Be that way!",
    "other whitespace",
);

cmp-ok(
    Bob.hey("This is a statement ending with whitespace      "),
    "eq",
    "Whatever.",
    "non-question ending with whitespace",
);

done-testing;

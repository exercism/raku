properties:
  find:
    test: |-
      if %case<expected><error>:exists {
        sprintf(q:to/END/, (:array(%case<input><array><>), %case<input><value>:p, %case<description>).map(*.raku));
        dies-ok(
            { binary-search %s, %s },
            %s,
        );
        END
      }
      else {
        sprintf(q:to/END/, |((:array(%case<input><array><>), %case<input><value>:p).map(*.raku)), %case<expected>, %case<description>.raku);
        cmp-ok(
            binary-search( %s, %s ),
            &infix:<==>,
            %s,
            %s,
        );
        END
      }

unit: module
example: |-
  sub binary-search (:@array, :$value) is export {
  }

stub: |-
  sub binary-search (:@array, :$value) is export {
  }

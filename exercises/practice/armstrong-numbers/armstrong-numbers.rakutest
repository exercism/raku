#!/usr/bin/env raku
use Test;
use JSON::Fast;
use lib $?FILE.IO.dirname;
use ArmstrongNumbers;
plan 9;

my @test-cases = from-json($=pod[*-1].contents).List;
for @test-cases -> %case {
  subtest %case<description>, {
    plan 2;
    isa-ok ( my $result := is-armstrong %case<input><number> ), Bool;
    is-deeply $result, %case<expected>, 'Result matches expected';
  }
}

=head2 Test Cases
=begin code
[
  {
    "description": "Zero is an Armstrong number",
    "expected": true,
    "input": {
      "number": 0
    },
    "property": "isArmstrongNumber"
  },
  {
    "description": "Single-digit numbers are Armstrong numbers",
    "expected": true,
    "input": {
      "number": 5
    },
    "property": "isArmstrongNumber"
  },
  {
    "description": "There are no two-digit Armstrong numbers",
    "expected": false,
    "input": {
      "number": 10
    },
    "property": "isArmstrongNumber"
  },
  {
    "description": "Three-digit number that is an Armstrong number",
    "expected": true,
    "input": {
      "number": 153
    },
    "property": "isArmstrongNumber"
  },
  {
    "description": "Three-digit number that is not an Armstrong number",
    "expected": false,
    "input": {
      "number": 100
    },
    "property": "isArmstrongNumber"
  },
  {
    "description": "Four-digit number that is an Armstrong number",
    "expected": true,
    "input": {
      "number": 9474
    },
    "property": "isArmstrongNumber"
  },
  {
    "description": "Four-digit number that is not an Armstrong number",
    "expected": false,
    "input": {
      "number": 9475
    },
    "property": "isArmstrongNumber"
  },
  {
    "description": "Seven-digit number that is an Armstrong number",
    "expected": true,
    "input": {
      "number": 9926315
    },
    "property": "isArmstrongNumber"
  },
  {
    "description": "Seven-digit number that is not an Armstrong number",
    "expected": false,
    "input": {
      "number": 9926314
    },
    "property": "isArmstrongNumber"
  }
]
=end code

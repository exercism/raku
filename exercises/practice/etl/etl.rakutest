#!/usr/bin/env raku
use Test;
use lib $?FILE.IO.dirname;
use ETL;

=head2 Notes
=begin para
The test expects your returned C<Hash> to have
L<type constraints|https://docs.raku.org/language/hashmap#Constraint_value_types>.
Defined C<Str>s for the values, and defined C<Int>s for the keys.
=end para

cmp-ok( # begin: 78a7a9f9-4490-4a47-8ee9-5a38bb47d28f
    transform( my List %{Int:D} = (1 => ("A",),) ),
    "eqv",
    ( my Int:D %{Str:D} = (:a(1),) ),
    "single letter",
); # end: 78a7a9f9-4490-4a47-8ee9-5a38bb47d28f

cmp-ok( # begin: 60dbd000-451d-44c7-bdbb-97c73ac1f497
    transform( my List %{Int:D} = (1 => ("A", "E", "I", "O", "U"),) ),
    "eqv",
    ( my Int:D %{Str:D} = (:a(1), :e(1), :i(1), :o(1), :u(1)) ),
    "single score with multiple letters",
); # end: 60dbd000-451d-44c7-bdbb-97c73ac1f497

cmp-ok( # begin: f5c5de0c-301f-4fdd-a0e5-df97d4214f54
    transform( my List %{Int:D} = (1 => ("A", "E"), 2 => ("D", "G")) ),
    "eqv",
    ( my Int:D %{Str:D} = (:a(1), :d(2), :e(1), :g(2)) ),
    "multiple scores with multiple letters",
); # end: f5c5de0c-301f-4fdd-a0e5-df97d4214f54

cmp-ok( # begin: 5db8ea89-ecb4-4dcd-902f-2b418cc87b9d
    transform( my List %{Int:D} = (1 => ("A", "E", "I", "O", "U", "L", "N", "R", "S", "T"), 2 => ("D", "G"), 3 => ("B", "C", "M", "P"), 4 => ("F", "H", "V", "W", "Y"), 5 => ("K",), 8 => ("J", "X"), 10 => ("Q", "Z")) ),
    "eqv",
    ( my Int:D %{Str:D} = (:a(1), :b(3), :c(3), :d(2), :e(1), :f(4), :g(2), :h(4), :i(1), :j(8), :k(5), :l(1), :m(3), :n(1), :o(1), :p(3), :q(10), :r(1), :s(1), :t(1), :u(1), :v(4), :w(4), :x(8), :y(4), :z(10)) ),
    "multiple scores with differing numbers of letters",
); # end: 5db8ea89-ecb4-4dcd-902f-2b418cc87b9d

done-testing;

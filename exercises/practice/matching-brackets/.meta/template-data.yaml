properties:
  isPaired:
    test: |-
      sprintf(q:to/END/, %case<input><value>.List<>, %case<expected>.List, %case<description>);
      cmp-ok(
          is-paired('%s'),
          "eq",
          %s,
          "%s",
      );
      END

example: |-
  grammar Balanced {
      token TOP         { <balanced> * }
      token balanced    { <parentheses> | <brackets> | <braces> | <other> }
      token parentheses { '(' ~ ')' <balanced> * }
      token brackets    { '[' ~ ']' <balanced> * }
      token braces      { '{' ~ '}' <balanced> * }
      token other       { <-[()\[\]{}]>        + }
  }
  sub is-paired ($a) is export {
    Balanced.parse($a).so
  }

stub: |-
  sub is-paired ($a) is export {
  }

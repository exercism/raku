properties:
  distance:
    test: |-
      if %case<expected><error>:exists {
         sprintf(q:to/END/, (|%case<input><strand1 strand2>, %case<expected><error>, %case<description>).map(*.raku) );
         throws-like(
            { hamming-distance %s, %s },
            Exception,
            message => /:i
                %s
                || "type check failed"
            /,
            %s,
         );
         END
      }
      else {

         sprintf(q:to/END/, (|%case<input><strand1 strand2>, |%case<expected description>).map(*.raku) );
         cmp-ok(
            hamming-distance( %s, %s ),
            "==",
            %s,
            %s,
         );
         END
      }

unit: module
example: |-
  sub hamming-distance (
    +@strands where { .elems == 2 && [==] $_».chars } --> Int:D
  ) is export {
    [+] [Zne] @strands».comb;
  }
stub: |-
  sub hamming-distance ( $strand1, $strand2 ) is export {
  }

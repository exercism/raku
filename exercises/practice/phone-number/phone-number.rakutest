#!/usr/bin/env raku
use Test;
use lib $?FILE.IO.dirname;
use Phone;

is(
    clean-number("(223) 456-7890"),
    "2234567890",
    "cleans the number",
);

is(
    clean-number("223.456.7890"),
    "2234567890",
    "cleans numbers with dots",
);

is(
    clean-number("223 456   7890   "),
    "2234567890",
    "cleans numbers with multiple spaces",
);

throws-like(
    { clean-number "123456789" },
    Exception,
    :message("incorrect number of digits"),
    "invalid when 9 digits",
);

throws-like(
    { clean-number "22234567890" },
    Exception,
    :message("11 digits must start with 1"),
    "invalid when 11 digits does not start with a 1",
);

is(
    clean-number("12234567890"),
    "2234567890",
    "valid when 11 digits and starting with 1",
);

is(
    clean-number("+1 (223) 456-7890"),
    "2234567890",
    "valid when 11 digits and starting with 1 even with punctuation",
);

throws-like(
    { clean-number "321234567890" },
    Exception,
    :message("more than 11 digits"),
    "invalid when more than 11 digits",
);

throws-like(
    { clean-number "523-abc-7890" },
    Exception,
    :message("letters not permitted"),
    "invalid with letters",
);

throws-like(
    { clean-number "523-\@:!-7890" },
    Exception,
    :message("punctuations not permitted"),
    "invalid with punctuations",
);

throws-like(
    { clean-number "(023) 456-7890" },
    Exception,
    :message("area code cannot start with zero"),
    "invalid if area code starts with 0",
);

throws-like(
    { clean-number "(123) 456-7890" },
    Exception,
    :message("area code cannot start with one"),
    "invalid if area code starts with 1",
);

throws-like(
    { clean-number "(223) 056-7890" },
    Exception,
    :message("exchange code cannot start with zero"),
    "invalid if exchange code starts with 0",
);

throws-like(
    { clean-number "(223) 156-7890" },
    Exception,
    :message("exchange code cannot start with one"),
    "invalid if exchange code starts with 1",
);

throws-like(
    { clean-number "1 (023) 456-7890" },
    Exception,
    :message("area code cannot start with zero"),
    "invalid if area code starts with 0 on valid 11-digit number",
);

throws-like(
    { clean-number "1 (123) 456-7890" },
    Exception,
    :message("area code cannot start with one"),
    "invalid if area code starts with 1 on valid 11-digit number",
);

throws-like(
    { clean-number "1 (223) 056-7890" },
    Exception,
    :message("exchange code cannot start with zero"),
    "invalid if exchange code starts with 0 on valid 11-digit number",
);

throws-like(
    { clean-number "1 (223) 156-7890" },
    Exception,
    :message("exchange code cannot start with one"),
    "invalid if exchange code starts with 1 on valid 11-digit number",
);

done-testing;

properties:
  factors:
    test: |-
      sprintf(q:to/END/, (%case<input><value>, %case<expected>.List<>, %case<description>).map(*.raku));
      cmp-ok(
          factors(%s),
          "~~",
          %s,
          %s,
      );
      END

unit: module
example: |-
  multi factors ( 1, | ) is export          { Empty   };
  multi factors ( $n where $n.is-prime, | ) { $n.List };
  multi factors ( $n, @primes = ( 2 .. * ).grep: *.is-prime ) {
    given $n %% @primes.head {
      when *.so { @primes.head, factors( $n div @primes.head, @primes      ).Slip }
      default   {               factors( $n,                  @primes.skip )      }
    }
  }

stub: |-
  sub factors ( $number ) is export {
  }

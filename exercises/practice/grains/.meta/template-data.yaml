properties:
  square:
    test: |-
      if %case<expected><error>:exists {
          sprintf(q:to/END/, (%case<input><square>, %case<expected><error>, %case<description>).map(*.raku));
          throws-like(
              { grains-on-square %s },
              Exception,
              message => /:i
                  %s
                  || "type check failed"
              /,
              %s,
          );
          END
      }
      else {
          sprintf(q:to/END/, (%case<input><square>, |%case<expected description>).map(*.raku));
          cmp-ok(
              grains-on-square(%s),
              "==",
              %s,
              %s,
          );
          END
      }

  total:
    test: |-
      sprintf(q:to/END/, |%case<expected description>.map(*.raku));
      cmp-ok(
          total-grains(),
          "==",
          %s,
          %s,
      );
      END

unit: module
example: |-
  sub grains-on-square ( $number where * âˆˆ 1 .. 64 ) is export {
      2 ** ($number - 1);
  }

  sub total-grains is export {
      [+] map 1..64: &grains-on-square;
  }

stub: |-
  sub grains-on-square ($number) is export {
  }

  sub total-grains is export {
  }


#!/usr/bin/env raku

use Test;
use Secrets;

cmp-ok( # begin: secret-add1 task: 1
    secret-add(3)(3),
    '==',
    6,
    'secret 3 + 3',
); # end: secret-add1

cmp-ok( # begin: secret-add2 task: 1
    secret-add(6)(9),
    '==',
    15,
    'secret 9 + 6',
); # end: secret-add2

cmp-ok( # begin: secret-subtract1 task: 2
    secret-subtract(3)(6),
    '==',
    3,
    'secret 6 - 3',
); # end: secret-subtract1

cmp-ok( # begin: secret-subtract2 task: 2
    secret-subtract(6)(3),
    '==',
    -3,
    'secret 3 - 6',
); # end: secret-subtract2

cmp-ok( # begin: secret-multiply1 task: 3
    secret-multiply(3)(6),
    '==',
    18,
    'secret 6 * 3',
); # end: secret-multiply1

cmp-ok( # begin: secret-multiply2 task: 3
    secret-multiply(6)(7),
    '==',
    42,
    'secret 7 * 6',
); # end: secret-multiply2

cmp-ok( # begin: secret-divide1 task: 4
    secret-divide(3)(6),
    '==',
    2,
    'secret 6 / 3',
); # end: secret-divide1

cmp-ok( # begin: secret-divide2 task: 4
    secret-divide(6)(6),
    '==',
    1,
    'secret 6 / 6',
); # end: secret-divide2

cmp-ok( # begin: secret-combine1 task: 5
    secret-combine( secret-add(10), secret-subtract(5) )(5),
    '==',
    10,
    'secret 5 + 10 - 5',
); # end: secret-combine1

cmp-ok( # begin: secret-combine2 task: 5
    secret-combine( secret-multiply(2), secret-subtract(20) )(100),
    '==',
    180,
    'secret 100 * 2 - 20',
); # end: secret-combine2

cmp-ok( # begin: secret-combine3 task: 5
    secret-combine( secret-divide(10), secret-add(10) )(100),
    '==',
    20,
    'secret 100 / 10 + 10',
); # end: secret-combine3

cmp-ok( # begin: secret-combine4 task: 5
    secret-combine( secret-divide(4), secret-add(5) )(32),
    '==',
    13,
    'secret 32 / 4 + 5',
); # end: secret-combine4

done-testing;

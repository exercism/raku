#!/usr/bin/env raku{{=#`{{ }}=}}#`{{! Mustache tags double up as Raku embedded comments}}
use Test;#`{{#cases}}
use JSON::Fast;#`{{/cases}}#`{{#modules}}
use #`{{&use}};#`{{/modules}}
use lib $?FILE.IO.dirname;#`{{#lib_comment}} #`[#`{{&lib_comment}}]#`{{/lib_comment}}
use #`{{&package}};#`{{#plan}}
plan #`{{&plan}};#`{{#plan_comment}} #`[#`{{&plan_comment}}]#`{{/plan_comment}}#`{{/plan}}#`{{#methods}}

#`{{#methods_comment}}#`[#`{{&methods_comment}}]
#`{{/methods_comment}}for <#`{{&methods}}> -> $method {
  #`{{&package}}.^can($method) or bail-out "Cannot run expected method `$method`.";
}#`{{/methods}}#`{{#cases}}

my @test-cases = from-json($=pod[*-1].contents).List;#`{{/cases}}#`{{#tests}}#`{{^cases}}
#`{{/cases}}

#`{{&tests}}#`{{/tests}}#`{{#catch_stub}}

CATCH {
  when X::StubCode {
    flunk 'Caught stub';
    note "{.message} (does the sub/method contain '!!!'?)\n"
      ~ .backtrace.concise;
  }
}#`{{/catch_stub}}#`{{^plan}}

done-testing;#`{{/plan}}#`{{#cases}}

=head2 Test Cases
=begin code
#`{{&cases}}
=end code#`{{/cases}}
